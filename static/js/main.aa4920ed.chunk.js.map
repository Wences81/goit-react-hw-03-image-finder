{"version":3,"sources":["components/services/api.jsx","components/SearchBar/SearchBar.jsx","components/ImageGalleryItem/imageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/App/App.js","index.js"],"names":["fetchPictures","pictureName","page","a","axios","get","response","data","hits","SearchBar","onSearch","className","onSubmit","e","preventDefault","target","elements","value","toLowerCase","type","name","autoComplete","autoFocus","placeholder","ImageGalleryItem","image","onClick","webformatURL","tags","src","alt","ImageGallery","pictures","onSelect","map","picture","id","onClic","Button","App","color","height","width","modalRoot","document","getElementById","Modal","handleKeyDown","code","props","onClose","handleBackdropClick","currentTarget","window","addEventListener","this","removeEventListener","createPortal","Component","state","selectedImg","reqStatus","showModal","handleFormSubmit","setState","loadMoreButtonClick","prevState","handleSelectedImage","largeImageUrl","toggleModal","_","nextSearch","nextPage","trim","length","toast","error","scrollTo","top","documentElement","scrollHeight","behavior","showButton","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aa4920ed.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const fetchPictures = async (pictureName, page) => {\n  const keyApi = '22617887-a3f68d8335d469bb4f11f2290';\n  const response = await axios.get(\n    `https://pixabay.com/api/?q=${pictureName}&page=${page}&key=${keyApi}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n  return response.data.hits;\n};\n","import PropTypes from 'prop-types';\n\nconst SearchBar = ({ onSearch }) => {\n  const handleSearch = e => {\n    e.preventDefault();\n    onSearch(e.target.elements.pictureName.value.toLowerCase());\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSearch}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          name=\"pictureName\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({ image, onClick }) {\n  const { webformatURL, tags } = image;\n\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        onClick={onClick}\n        alt={tags}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.object.isRequired,\n  onClick: PropTypes.func,\n};\n","import ImageGalleryItem from '../ImageGalleryItem/imageGalleryItem';\nimport PropTypes from 'prop-types';\n\nconst ImageGallery = ({ pictures, onSelect }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {pictures.map((picture, id) => (\n        <ImageGalleryItem\n          key={id}\n          image={picture}\n          onClic={() => onSelect(picture)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ImageGallery;\n\nImageGallery.propTypes = {\n  pictures: PropTypes.arrayOf(\n    PropTypes.shape({\n      picture: PropTypes.object,\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n  onSelect: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nfunction Button({ onClick }) {\n  return (\n    <button type=\"button\" onClick={onClick} className=\"Button\">\n      Load more\n    </button>\n  );\n}\n\n// window.scrollTo({\n//   top: document.documentElement.scrollHeight,\n//   behavior: 'smooth',\n// });\n\nexport default Button;\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default function App() {\n  return (\n    <div>\n      <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\n    </div>\n  );\n}\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.getElementById('modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n};\n","import { Component } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { fetchPictures } from '../services/api';\nimport SearchBar from '../SearchBar/SearchBar';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport Button from '../Button/Button';\nimport Loader from '../Loader/Loader';\nimport Modal from '../Modal/Modal';\nimport '../Styles/styles.css';\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    pictureName: '',\n    pictures: [],\n    selectedImg: null,\n    reqStatus: 'idle',\n    page: 1,\n    showModal: false,\n  };\n\n  async componentDidUpdate(_, prevState) {\n    const nextSearch = this.state.pictureName;\n    const nextPage = this.state.page;\n    if (prevState.pictureName !== nextSearch || prevState.page !== nextPage) {\n      try {\n        this.setState({ reqStatus: 'pending' });\n\n        const pictures = await fetchPictures(nextSearch, nextPage);\n        this.setState(prevState => ({\n          pictures: [...prevState.pictures, ...pictures],\n          reqStatus: 'resolved',\n        }));\n\n        if (nextSearch.trim() === '' || pictures.length === 0) {\n          return toast.error(\n            `Sorry, but there are no pictures with  ${nextSearch}`,\n          );\n        }\n      } catch (error) {\n        this.setState({ reqStatus: 'rejected' });\n        toast.error('Something went wrong');\n      }\n\n      this.state.page > 1 &&\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n    }\n  }\n\n  handleFormSubmit = pictureName => {\n    this.setState({ pictureName });\n  };\n\n  loadMoreButtonClick = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  handleSelectedImage = largeImageUrl => {\n    this.setState(prevState => ({\n      showModal: !prevState.showModal,\n      selectedImg: largeImageUrl,\n    }));\n  };\n\n  toggleModal = () => {\n    this.setState(state => ({\n      showModal: !state.showModal,\n    }));\n    this.setState({\n      selectedImg: '',\n    });\n  };\n\n  render() {\n    const { pictures, reqStatus, selectedImg, showModal } = this.state;\n    const showButton = pictures.length >= 12;\n\n    return (\n      <div>\n        <Toaster />\n        <SearchBar onSearch={this.handleFormSubmit} />\n        <ImageGallery pictures={pictures} onSelect={this.handleSelectedImage} />\n        {showButton && <Button onClick={this.loadMoreButtonClick} />}\n        {showModal && (\n          <Modal\n            src={selectedImg.largeImageUrl}\n            alt={selectedImg.tags}\n            onClose={this.toggleModal}\n          />\n        )}\n        {reqStatus === 'pending' && <Loader />}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}